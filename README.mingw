#######################################################################
#                 copyright 2020, BP America Inc.                     #
#                        All Rights Reserved                          #
#######################################################################

File: $DDSROOT/README.mingw

 1) Install MingW compiler.

    This particular build has been test successfully on Linux x86_64
    host OS:
    https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/rubenvb/gcc-4.8-release/x86_64-w64-mingw32-gcc-4.8.0-linux64_rubenvb.tar.xz/download

    MINGWPATH must be set to the place where MingW is installed/unpacked.

 2) Install Wine64 environment (optional).

    DDS build environment automatically generates a few header files
    with platform specific size and type definitions. If wine64 is not
    available, then DDS build environment will use pre-built header
    files for MingW.

    If building from source, then use the following configuration:
    PATH=$MINGWPATH/bin:$PATH ./configure \
    --prefix=$WINEPATH --enable-win64 --with-mingw

    where WINEPATH is your specific installation path for wine.

 3) Define the following environment variables:

    PATH=$MINGWPATH/bin:$MINGWPATH/x86_64-w64-mingw32/bin:$WINEPATH/bin:/bin:/usr/bin
    COMPILER=$MINGWPATH/bin/x86_64-w64-mingw32-gfortran
 
    DDSROOT and DDS_DIST must be defined as per general DDS installation
    documentation.

 4) Using the general build instructions, compile and install libhost, libgio, and libdds3.

 5) Build and install pre-packaged fftw.

 6) Build and install libfft using the general build instuctions.

 7) DDS applications can now be built for Windows using GNU make on Linux.

    A compiled static Windows binary for each application, can be found in the
    binary directory bin/w64-mingw32/4.8.0/x86_64. That executable can be
    trasnferred to a Windows machine and run as a standalone binary without
    any additional runtime pieces.

NOTE: Building MPI-enabled applications is not yet supported in this regime.

