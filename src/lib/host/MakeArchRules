########################################################################
#                      copyright 2008, BP America                      #
#                          All Rights Reserved                         #
########################################################################
# $Id: MakeArchRules 70 2009-03-18 17:02:02Z user $

### Default target for arch/Makefile
DEFAULT_TARGET: $(target)
	@$(VERBOSE) Default= $@: $?

yelp_arch:
	# YELP_ARCH:
	#    host=$(host)
	#    target=$(target)
	#    HARCH=$(HARCH) 
	#    VARCH=$(VARCH)
	#    TARCH=$(TARCH)
	#    UARCH=$(UARCH)

gmake_version:
	@- echo HOST= $(HOST), uname -r= `uname -r`
	@- which $(MAKE)
	@- $(MAKE) --version

#################################################################
###  How to install commands, libraries, include files, etc.  ###
#################################################################

### How to create directories needed by install.
$(INSTALL2_SRC_DIR) $(INSTALL2_ARCH_DIR):
	$(UMASK) $(UMASK_VALUE); $(MKDIR) $@

$(DDSROOT)/lib/$(TARCH):
	ln -s $(UARCH) $(DDSROOT)/lib/$(TARCH)

$(DDSROOT)/include/$(TARCH):
	ln -s $(UARCH) $(DDSROOT)/include/$(TARCH)

### How to install "etc" from source.
$(INSTALL2_SRC_ETC): $(API_ETC)/% : %
	@$(SAVE_AT)
	$(CP) $? $@
	@$(KILL_OLD)

### How to install "bin" from source.
$(INSTALL2_SRC_BIN): $(API_BIN)/% : %
	@$(SAVE_AT)
	$(CP) $? $@
	@$(KILL_OLD)

### How to install "include" from source.
$(INSTALL2_SRC_INC.h): $(API_INC)/% : ../% 
	@$(SAVE_AT)
	$(CP) $? $@
	@$(KILL_OLD)

### How to install "bin/$(UARCH)" from $(TARCH).
$(INSTALL2_ARCH_BIN): $(API_BIN.a)/% : %
	@$(SAVE_AT)
	$(CP) $? $@
	@$(KILL_OLD)

### How to install "include/$(UARCH)" from $(TARCH).
$(INSTALL2_ARCH_INC.h): $(API_INC.a)/% : %
	@$(SAVE_AT)
	$(CP) $? $@
	@$(CD) $(API_INC);$(RM) $?
	@$(KILL_OLD)

### How to install "lib/$(UARCH)" from $(TARCH).
$(INSTALL2_ARCH_LIB.a): $(API_LIB.a)/% : % 
	@$(SAVE_ALL)
	$(CP) $? $@
	$(RANLIB) $@

### Nominal dependencies for install (install_src and install_arch).
install_more: install_src  install_arch
	@- ls -lt $(MKLIBS)
	@- for L in $(MKLIBS); do ls -lt $(DDSROOT)/lib/*/$$L; done

install_src:  $(INSTALL2_SRC_DIR) $(INSTALL2_SRC_ETC) $(INSTALL2_SRC_BIN) \
   $(INSTALL2_SRC_INC.h) 
	@$(VERBOSE) Rule, $@: $?

install_arch:  $(INSTALL2_ARCH_DIR) $(INSTALL2_ARCH_BIN) \
   $(INSTALL2_ARCH_LIB.a) $(INSTALL2_ARCH_INC.h) \
   $(DDSROOT)/lib/$(TARCH) $(DDSROOT)/include/$(TARCH)
	@$(VERBOSE) Rule, $@: $?

### Long list of all installed files
### | fgrep -i -v 'No such file or directory'
installed:
	@- echo;echo "*** Installed under $(DDSROOT) ***";\
           ls -l $(INSTALL2_SRC_INC.h) $(INSTALL2_ARCH_INC.h) \
           $(INSTALL2_ARCH_BIN) $(INSTALL2_ARCH_LIB.a) |\
           sed 's[$(DDSROOT)/[[g'
	@$(VERBOSE) Rule, $@: $?

### Echo generic compile and load commands.
generic_commands:
	#COMPILE.c= $(COMPILE.c) $(CFLAGS) $(CPPFLAGS)
	#LINK.c= $(LINK.c) $(CFLAGS) $(CPPFLAGS) $(LIBS)
	#COMPILE.f= $(COMPILE.f) $(CFLAGS)
	#LINK.f= $(LINK.f) $(LIBS)
	#COMPILE.F= $(COMPILE.F) $(FFLAGS) $(CPPFLAGS)
	#LINK.F= $(LINK.F) $(FFLAGS) $(CPPFLAGS) $(LIBS)
	#LOAD= $(LOAD) $(LIBS)

### rules to add group write and other read privileges
group_grope: group_write other_read
	@$(VERBOSE) Rule, $@: $?

### rules to add group write privileges
group_write:
	chmod g+w  .  *  ..  ../*  ../mklog/*  ../RCS/*

### rules to add other read privileges
other_read:
	chmod o+r  .  *  ..  ../*  ../mklog/*  ../RCS/*

### various degrees of cleanliness
clean: clean.o
	@$(VERBOSE) Rule, $@: $?

clean.o: clean.a
	@- rm -f *.o

clean.bin:
	@- rm -f $(INSTALL_ARCH_BIN)

clean.a:
	@- rm -f lib*.a

clean_all:
	@- rm -f *

