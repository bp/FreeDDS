#!/bin/sh
#
# makebinscript creates a startup script for the dds application
#
# Usage: makebinscript <prog> [MPI|MPIX|LNDMRK]
#

if [ $# -lt 1 ]; then
	echo " "
	echo "makebinscript create startup script for the dds application"
	echo " "
	echo "Usage: makebinscript <program name> [MPI|MPIX|LNDMRK|NORMAL] dist_product=[mbs|usp|drtk]"
	echo " "
	echo "where MPI    indicates mpi-specific script"
	echo "      MPIX   indicates optional mpi-specific script"
	echo "      LNDMRK indicates Landmark-specific script"
	echo "      NORMAL indicates normal startup script (default)"
	echo " "
	exit 1
fi

# program name must be first option for backwards compatiblity

PRG=$1 ; shift 1
SED="sed 's[mbs/prod[usp/SeisWorks/12b['|sed 's./[^/]*$..'"

MPI=no
MPIX=no
LNDMRK=no
dist_product=mbs
#
# check other options
#
for arg do
   case $arg in
      MPI) MPI="yes"; shift 1;; 
      MPIX) MPI="yes"; MPIX="yes"; shift 1;; 
      LNDMRK) LNDMRK="yes"; shift 1;; 
      NORMAL) shift 1;; 
      dist_product=*) eval $arg; shift 1;; 
      help=*) help=1; shift 1;; 
      *=*);;
      *) case $prev in
            dist_product=)  eval ${prev}${arg}; shift 1;; 
         esac
   esac
   prev=$arg
done

DIST_PRODUCT=${dist_product}

#
# If we don't have a script, create one
#
version=1
if [ -f $PRG ]; then
   if [ ${MPI} = yes ]; then
      version=`grep 'VERSION: 1.0' $PRG|wc -l`
      if [ "$version" = 1 ]; then
         exit 0
      fi
      mv $PRG ${PRG}~
   else
      exit 0
   fi
fi

echo
echo '#!/bin/sh' > $PRG
echo '###############################################################' >> $PRG
echo '#                 copyright 2010, BP America Inc.             #' >> $PRG
echo '#                       All Rights Reserved                   #' >> $PRG
echo '#                          VERSION: 1.0                       #' >> $PRG
echo '###############################################################' >> $PRG
echo '#' >> $PRG
echo '# application startup script' >> $PRG
echo '#' >> $PRG
echo '' >> $PRG
if [ "${DIST_PRODUCT}" == "mbs" ]; then
echo '. dds-set-path' >> $PRG
else
echo '. '${DIST_PRODUCT}'-set-path' >> $PRG
fi
echo '' >> $PRG
if [ ${MPI} = yes ]; then
   echo 'np=1' >> $PRG
   echo 'ph=1' >> $PRG
   echo 'mach=' >> $PRG
   echo '' >> $PRG 
   echo '# if submitted through SGE, machine file is automatically built &' >> $PRG 
   echo '# put in $TMPDIR/machines; otherwise default is no machine file.' >> $PRG 
   echo 'if [ -f "${TMPDIR}/machines" ]; then' >> $PRG 
   echo '   mach=$TMPDIR/machines' >> $PRG 
   echo 'fi' >> $PRG 
   echo '' >> $PRG 
   echo 'argv=' >> $PRG 
   echo 'while [ $# -gt 0 ]; do' >> $PRG
   echo '   case $1 in' >> $PRG
   echo '      np=)' >> $PRG
   echo '         shift;' >> $PRG
   echo '         eval np=$1;;' >> $PRG
   echo '      np=*)' >> $PRG
   echo '         eval $1;;' >> $PRG
   echo '      ph=)' >> $PRG 
   echo '         shift;' >> $PRG 
   echo '         eval ph=$1;;' >> $PRG 
   echo '      ph=*)' >> $PRG 
   echo '         eval $1;;' >> $PRG 
   echo '      mach=)' >> $PRG
   echo '         shift;' >> $PRG
   echo '         eval mach=$1;;' >> $PRG
   echo '      mach=*)' >> $PRG
   echo '         eval $1;;' >> $PRG
   echo '      *)argv="${argv}${1} ";;' >> $PRG 
   echo '   esac' >> $PRG
   echo '   shift' >> $PRG
   echo 'done' >> $PRG
   echo '' >> $PRG
   if [ ${MPIX} = yes ]; then
      if [ $version = 1 ]; then
         echo "*** Creating MPIX startup script: ${PRG} ***"
      else
         echo "*** Recreating MPIX startup script: ${PRG} ***"
      fi
      echo 'if [ ! -x "${MPIRUN}" -o "$np" = "1" ]; then' >> $PRG
   else
      if [ $version = 1 ]; then
         echo "*** Creating MPI startup script: ${PRG} ***"
      else
         echo "*** Recreating MPI startup script: ${PRG} ***"
      fi
      echo 'if [ ! -x "${MPIRUN}" ]; then' >> $PRG
   fi
   echo '   exec $APP $argv np=1' >> $PRG
   echo 'elif [ "$mach" != "" ]; then' >> $PRG
   echo '   if [ "$OSNAME" = "IRIX64" -o "$machine" = "ia64" ]; then' >> $PRG
   echo '#     ignore machine file even if provided on an IRIX or Altix machine' >> $PRG
   echo '      MPIRUN="${MPIRUN} -np $np"' >> $PRG
   echo '   elif [ -n "$IntelMPI" ]; then' >> $PRG
   echo '#     Use Intels -perhost option' >> $PRG
   echo '      MPIRUN="${MPIRUN} -f $mach -perhost $ph -np $np"' >> $PRG
   echo '   else' >> $PRG
   echo '      MPIRUN="${MPIRUN} -f $mach -np $np"' >> $PRG
   echo '   fi' >> $PRG
   echo 'else' >> $PRG
   echo '   MPIRUN="${MPIRUN} -np $np"' >> $PRG
   echo 'fi' >> $PRG
   echo '' >> $PRG
   echo 'exec $MPIRUN $APP $argv np=$np _mpi_dummy= < /dev/null' >> $PRG
elif [ "${LNDMRK}" != "no" ]; then
   echo "*** Creating Landmark startup script: ${PRG} ***"
   echo 'LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:`echo $APP|'${SED}'`"' >> $PRG
   echo '' >> $PRG
   echo '. dds-set-ow' >> $PRG
   echo '' >> $PRG
   echo 'exec $APP ${1:+"$@"}' >> $PRG
else
   echo "*** Creating basic startup script: ${PRG} ***"
   echo 'exec $APP ${1:+"$@"}' >> $PRG
fi
echo
chmod 775 $PRG
