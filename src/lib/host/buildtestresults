#!/bin/sh 
#
# This is a script to build html page of programs test results
#
# Makesure DDSROOT is set correctly
#
# buildtestresults [<testdir >]

DDSROOT=${1:-/tstapps/global/src/dds}

date=`date`
RED='#ff0000'
YELLOW='#ffbc00'
GREEN='#00b000'
BLUE='#0061ff'

if [ $# -gt 0 ]; then
   testdir="$1"
else
   testdir=testresults
   rm -rf testresults
   mkdir -p testresults
fi

#
# build header function
#
header()
{
cat << EOF > $1
<!DOCTYPE html PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN'>
<html>
  <head>
    <title>Data Dictionary System: Application Tests</title>
    <meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
    <link href='../../styles.css' type='text/css' rel='stylesheet'>
    <script src='../../javascript.js' language='JavaScript'
        type='text/javascript'>
    </script>
  </head>
  <body background="../../images/Background.jpg">
    <script type='text/javascript'>header('applications','testresults','none')</script>
    <center>$2<br>(updated: ${date})</center>
    <table align='center' border='1' cellspacing='1' cellpadding='1' bgcolor='#03629C'><tr><td>
    <table class='topic' border='1' cellspacing='0' cellpadding='5' bgcolor='#ffffff'>
EOF
}

#
# build footer function
#
footer()
{
cat << EOF2 >> $1
    </table></td></tr></table>
    <script type='text/javascript'>footer()</script>
  </body>
</html>
EOF2
}

#
# build status/color & stats
#
setstats()
{
   ntest=`grep -h $1 $2|wc -l`
   fatal=`grep -h $1 $2|grep -i fatal|head -1`
   noresults=`grep -h $1 $2|grep -i "no results"|head -1`
   unknown=`grep -h $1 $2|grep -i unknown|head -1`
   nok=`grep -h $1 $2|grep -i "finished ok"|wc -l`
   rev=`grep "Current working version" $2|head -1|awk '{print $4}'`
   dat=`grep ^DATE: $2|head -1|awk '{print $2}'`
   tim=`grep ^TIME: $2|head -1|awk '{print $2}'`
   dsk=`grep ^DISKSIZE: $2|head -1|awk '{print $2}'`

   if [ -n "$fatal" ]; then
      status="FATAL PROBLEM"
      color=$RED
   else 
      if [ -n "$noresults" ];  then
         status="NO RESULTS"
         color=$YELLOW
      else
         if [ "$unknown" ];  then
            status="UNKNOWN STATUS"
            color=$YELLOW
         else
            if [ "$nok" == "$ntest" ];  then
               status="FINISHED OK"
               color=$GREEN
            else
               status="UNKNOWN STATUS"
               color=$BLUE
            fi
         fi
      fi
   fi
}


#
# build program summary
#
prog=`pwd|awk -F/ '{print $NF}'`
psummary="$testdir/$prog.html"
setstats "^TEST" "TestLog.*"
header $psummary "Summary for program: <b>$prog</b> (rev: $rev $dat)"


hosts=`ls TestLog_*|awk -F. '{print $2}'`
for host in $hosts; do
   setstats "^TEST" TestLog.$host
   echo "<tr><td><b><a href='${prog}_$host.html'>$host</a></b></td><td>Time:&nbsp;$tim&nbsp;sec</td><td>Disk:&nbsp;$dsk&nbsp;Kbytes</td><td style='color:$color;font-weight:bold;'>&nbsp;$status</td></tr>" >> $psummary

#
# build test summary
#
   tsummary="$testdir/${prog}_${host}_tests.html"
   header $tsummary "Test Log for $prog on $host"
   echo "<tr><td><pre>" >> $tsummary
   cat TestLog_*.$host|sed 's/\(Running "tests\/test\)\([0-9]*\)"/<a name="test\2" title="test\2"><\/a>\n<b><u>\1\2"<\/u><\/b>/' >> $tsummary
   echo "</pre></td></tr>" >> $tsummary
   footer $tsummary

#
# build host summary
#
   hsummary="$testdir/${prog}_$host.html"
   header $hsummary "Summary for program: <b>$prog</b> on <b>$host</b>"
   tests=`grep -h '^Running "tests/test' TestLog.$host|awk '{print $2}'|sed -e 's/"//g' -e 's/tests\/test//'|sort -g`
   if [ -z "$tests" ]; then
      echo "<tr><td><b><a href='${prog}_${host}_tests.html'>test?</a></b></td><td style='color:$YELLOW'>NO&nbsp;RESULTS</td></tr>" >> $hsummary
   fi
   for num in $tests; do
      setstats "^TEST*${num}[^0-9]" "TestLog_*.$host"
      #status=`grep -h -m 1 '^TEST*$num' TestLog_*$host`
      status=`grep -h -m 1 "^TEST*${num}[^0-9]" TestLog_*$host`
      if [ -z "$status" ]; then
         color=$YELLOW
         status='NO RESULTS'
      fi 
#
#     Check for any "Lookat" files
#  
      lookat=`echo "$status"|grep '[Ll]ook at '|sed -e 's/\([Ll]ook at \)\(.*\)/\2/'|awk '{print $NF}'`
      if [ -n "$lookat" ]; then
         lookatfiles=''
         for lfile in $status; do
            if [ -f $lfile  ]; then
               lookatfiles="$lookatfiles $lfile"
            fi
         done
         nlookats=`ls $lookatfiles | wc -w`
         if [ $nlookats -gt 1 ]; then
#
#          Multiple files - assume possible jpeg
#
	    lookatfile="$testdir/lookat_${prog}_${host}_test${num}_lookat.html"
            jdir="images_${prog}_${host}_test${num}"
   	    header $lookatfile "Test $num Results file for $prog on $host"
            mkdir -p $testdir/$jdir

	    for lfile in $lookatfiles; do
               jfile=`echo $lfile|awk -F/ '{print $NF}'`
               scp ${host}:$lfile $testdir/$jdir 2> /dev/null
               echo "<tr><td><img src='$jdir/$jfile' />$file</td></tr>" >> $lookatfile
            done
            footer $lookatfile
         else
            lookatfile="$testdir/lookat_${prog}_${host}_test${num}_"`echo $lookat|awk -F/ '{print $NF}'`
            type=`ssh $host file $lookat|grep -i ascii`
            if [ -n "$type" ]; then
               lookatfile=$lookatfile.html
               header $lookatfile "Test $num Results file for $prog on $host"
               echo "<tr><td><pre>" >> $lookatfile
               ssh ${host} cat $lookat >> $lookatfile 
               echo "</pre></td></tr>" >> $lookatfile
               footer $lookatfile
            else
               scp ${host}:$lookat $lookatfile 2> /dev/null
            fi
         fi
         if [ -f $lookatfile ]; then
            lookatfile=`echo $lookatfile|awk -F/ '{print $NF}'`
            status=`echo "$status"|sed -e 's/\([Ll]ook at \)\(.*\)/\1<a href="/'`"${lookatfile}\">${lookat}</a>"
         fi
      fi

      echo "<tr><td><b><a href='${prog}_${host}_tests.html#test$num'>test$num</a></b></td><td style='color:$color'>&nbsp;$status</td></tr>" >> $hsummary
   done
   footer $hsummary
done
footer $psummary
