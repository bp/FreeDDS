########################################################################
#                 copyright 2003, Amoco Production Company             #
#                             All Rights Reserved                      #
#                     an affiliate of BP America Inc.                  #
########################################################################

 File: READ.XYScaler

#in_data= /dev/rmt/1l
#in_format= segy
#out= junk
#out_format= usp
#dds_debug= diff

COMMENT= The following assumes bridge (rev 3) is used.
   Note: the "*" (multiply operator) must be protected using quotes,
   iff it appears on the command line (not in a par file).
   If not protected, the shell expands filenames before DDS starts.

comment= SCHEME #1...
   This is the current (simple) default used by bridge.
   The prefix on the definition name is "map:segy:usp.",
   i.e. its used only when mapping from segy to usp.
map:segy:usp.SrPtXC= SrcX
map:segy:usp.SrPtYC= SrcY
map:segy:usp.RcPtXC= GrpX
map:segy:usp.RcPtYC= GrpY


comment= SCHEME #2...
   The end user controls scaling by defining
      "ScaleSegyXYCoord\= <operator> <value>".

##ScaleSegyXYCoord= * 1
##ScaleSegyXYCoord= / 10
##ScaleSegyXYCoord= * XYScaler
map:segy:usp.SrPtXC=  SrcX  defn_value("par:","ScaleSegyXYCoord")
map:segy:usp.SrPtYC=  SrcY  defn_value("par:","ScaleSegyXYCoord")
map:segy:usp.RcPtXC=  GrpX  defn_value("par:","ScaleSegyXYCoord")
map:segy:usp.RcPtYC=  GrpY  defn_value("par:","ScaleSegyXYCoord")

   more_comments=
   The "defn_value(<dict_name>, <defn_name>)" is a map function.
   It performs textual substitution of a definition value.
   The "par:" dict contains command line and "par=filename" defns.
   Nothing is substituted, if the definition does not exist,
   i.e. if the end user does NOT define "ScaleSegyXYCoord".
   Other reasonable values might be "* 1", "/ 10", or "* XYScaler".

comment= SCHEME #3...
   Blindly apply the segy header "XYScaler" (sic),
   i.e. it does NOT honor the convention for negative values.
   The SEG standard says "if negative, scaler used as a divisor".
#map:segy:usp.SrPtXC= XYScaler * SrcX
#map:segy:usp.SrPtYC= XYScaler * SrcY
#map:segy:usp.RcPtXC= XYScaler * GrpX
#map:segy:usp.RcPtYC= XYScaler * GrpY

comment= SCHEME #4, extension to #2...
   Honor positive and negative segy header "XYScaler" values.
   This hairy/scary value uses the "C" conditional operator,
   i.e. "<test_expr> ? <value_if_true> : <value_if_false>".
   The ":?" operator (hence this scheme) is currently broken...
   the basic DDS machinery is in place, but was never debugged
   because of time and priority constraints.
ScaleSegyXYCoord= * (XYScaler >\= 0 ?   XYScaler : 1)
                  / (XYScaler <   0 ? - XYScaler : 1)

