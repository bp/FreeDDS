#!/bin/csh -f
#
# script to convert a dds file to ascii format
#
# Maintained by Jerry Ehlers under DDS
#

if (${#argv} < 1 || ${#argv} > 2) then
   echo 
   echo "dump a dds file to an ascii format file (1D, 2D, ... or 9D)"
   echo
   echo "usage: asciidump <input> [<output>]"
   echo
   echo "where: input = any input dds file"
   echo "       output= output ascii file (default stdout)"
   echo
   exit 0
endif

setenv PRINT_PATH /dev/null

#
#	define parameters
#
set in=$1


#
#	get the needed parameters from the dictionary
#
set axes=(`dds_defn name=axis < ${in}`)
set size=
set delta=
set origin=
set ndim=0
foreach axis (${axes})
   set size=(${size} `dds_defn name=size.${axis} < ${in}`)
   set delta=(${delta} `dds_defn name=delta.${axis} < ${in}`)
   set origin=(${origin} `dds_defn name=origin.${axis} < ${in}`)
end

set ndim=${#size}
set is = ( 1 2 3 4 5 6 7 8 9 )
foreach i ($is)
   if ( $i <= $ndim ) then
      set n$i = $size[$i]
      set d$i = $delta[$i]
      set o$i = $origin[$i]
   else
      set n$i = 1
      set d$i = 1
      set o$i = 0
   endif
end

#
#	create awk file
#
set awkfile=/tmp/asciidump_awkfile$$
cat > ${awkfile} << _end
BEGIN {i1=0;i2=0;i3=0;i4=0;i5=0;i6=0;i7=0;i8=0;i9=0;}
{
   x1=${o1}+i1*${d1};
   x2=${o2}+i2*${d2};
   x3=${o3}+i3*${d3};
   x4=${o4}+i4*${d4};
   x5=${o5}+i5*${d5};
   x6=${o6}+i6*${d6};
   x7=${o7}+i7*${d7};
   x8=${o8}+i8*${d8};
   x9=${o9}+i9*${d9};
   if (${n9}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,x5,x6,x7,x8,x9,\$1;
   } else if (${n8}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,x5,x6,x7,x8,\$1;
   } else if (${n7}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,x5,x6,x7,\$1;
   } else if (${n6}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,x5,x6,\$1;
   } else if (${n5}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,x5,\$1;
   } else if (${n4}>1) {
      printf "%12.5g %12.5g %12.5g %12.5g %g\n",x1,x2,x3,x4,\$1;
   } else if (${n3}>1) {
      printf "%12.5g %12.5g %12.5g %g\n",x1,x2,x3,\$1;
   } else if (${n2}>1) {
      printf "%12.5g %12.5g %g\n",x1,x2,\$1;
   } else {
      printf "%12.5g %g\n",x1,\$1;
   }
   i1=i1+1;
   if (i1>=${n1}) {
      i1=0;
      i2=i2+1;
      if (i2>=${n2}) {
         i2=0;
         i3=i3+1;
         if (i3>=${n3}) {
            i3=0;
	         i4=i4+1;
            if (i4>=${n4}) {
               i4=0;
               i5=i5+1;
               if (i5>=${n5}) {
                  i5=0;
                  i6=i6+1;
                  if (i6>=${n6}) {
                     i6=0;
                     i7=i7+1;
                     if (i7>=${n7}) {
                        i7=0;
                        i8=i8+1;
                        if (i8>=${n8}) {
                           i8=0;
                           i9=i9+1;
                           if (i9>=${n9}) {
                              i9=0;
                           } 
                        } 
                     } 
                  } 
               } 
            } 
         }
      }
   }
}
_end

#
#	convert to ascii
#
which b2a
if ($status != 0) then
   echo "DDS program 'b2a' not found"
else if (${#argv} > 1) then
   (dds_bridge in=${in} out_format=asp out_data=stdout: \
      'fmt:*:asp.ASP_TRACE= typedef struct {float Samples[axis_size(1)];} ASP_TRACE;' |\
   b2a n1=1 | (awk -f ${awkfile} > $2)) >& /dev/null
else
   dds_bridge in=${in} out_format=asp out_data=stdout: \
      'fmt:*:asp.ASP_TRACE= typedef struct {float Samples[axis_size(1)];} ASP_TRACE;' |\
   b2a n1=1 | awk -f ${awkfile}
endif

#
#	remove working files
#
rm -f ${awkfile}
