#!/bin/csh -f
#============================================================
# restores DDS file by unattaching binary data from dictonary
# --
# 10/24/97 wr
# 12/04/97 rma
# 12/17/97 wr
# 04/02/99 jwe
#============================================================

if ( $#argv != 4 && $#argv != 5) then
   echo ' ' 
   echo 'dds_rs - restores DDS_file, splits binary and dictionary file' 
   echo '         or pipes the data to stdout.' 
   echo ' ' 
   echo 'Usage: dds_rs <dds_dictonary_file> <storage_set> <ids_machine> <data_path>|stdout: [<version>]' 
   echo '       (ie: having the 4th argument set to "stdout:" will pipe the data to stdout.)' 
   echo ' ' 
   exit 1
endif

#
# SET VARIABLES
#

set IN = $1
set IDS_SS = $2
set IDS_MACH = $3
set DATA_PATH = $4
if ( $#argv == 5 ) then
	set IDS_VER = "-v $5"
else
   set IDS_VER = " "
endif

set DICT = ${IN:gt}
set IDS_OUT = ${DICT}.ids.out

#
#	READ FROM TAPE AND PIPE OUT
#
if (${DATA_PATH}. == "stdout:.") then
   ids_get  -i ${IN} -s ${IDS_MACH} -ss ${IDS_SS} -lf ${IDS_OUT} ${IDS_VER} 
   if ($status) then
      exit 1
   endif

   exit 0
endif

#
# READ FROM TAPE AND WRITE TO FILE
#
set BIN = ${DATA_PATH}/${DICT}_@
if ( -e ${BIN} && -e ${DICT} && ! -z ${BIN} ) then
   echo '*** ERROR: Binary data already there ***'
   echo '       Skip this one'
   exit 1
endif

ids_get  -i ${IN} -s ${IDS_MACH} -ss ${IDS_SS} -lf ${IDS_OUT} ${IDS_VER} |\
dds_bridge in=stdin: out= ${DICT} out_data= ${BIN}

if ($status) then
   echo "   *** Error restoring ${IN} ***"
   exit 1
endif

echo ${DICT} and ${BIN} restored from ${IDS_SS} on ${IDS_SS}
exit 0
