#!/bin/csh -f
#=======================================================
# removes both dictonairy file and binary data
# --
# 07/17/97 wr
# 04/02/99 jwe
# 04/06/06 jwe
# 10/29/10 jwe
#===========================

set owner = 0
set test  = 0
if ( "${1}." == "-o." ) then
   shift
   set owner = 1
   if ( "${1}." == "-t." ) then
      shift
      set test = 1
   endif
else if ( "${1}." == "-t." ) then
   shift
   set test = 1
   if ( "${1}." == "-o." ) then
      shift
      set owner = 1
   endif
endif
   
if ( $#argv < 1 ) then
   echo "dds_rm - will remove both dictonary and binary files."
   echo " "
   echo "Usage: dds_rm [-o] [-t] <dds_dictonary_file(s)...>"
   echo " "
   echo "where: -o will check that you have ownership"
   echo " "
   echo " "
   exit 1
endif

set i = 1
set errors = 0
while ($i <= $#argv )
   set dict = $argv[$i]
   set data = `dds_defn name=data < $dict`
   set i = `expr $i + 1`
   
   echo
   echo "Attempting to remove:"
   echo "     Dictionary  - '$dict'"
   echo "     Binary file - '$data'"
   echo

   if ( "${data}." == "stdin:." || "${data}." == "dict:." ) then
      echo "   *** WARNING: Ignoring Binary file: $data ***"
      set data = ""
   else if ( "${data}." == "." ) then
      echo "   *** ERROR: No Binary file found ***"
      set errors = 1
      continue
   else if ( "${data}." == "${dict}." ) then
      echo "   *** ERROR: The Binary file and Dictionary are the same ***"
      set errors = 1
      continue
   endif

   set mores = ''
   foreach file ($data)
      set more = `dds_defn name=data < $file`

      if ( "${more}." != "." && "${more}." != "stdin:." && "${more}." != "dict:." ) then
         set mores = "$mores $more"
         echo "   *** WARNING: Also removing sliced files, $more ***"

         foreach mor ($more)
            set m = `dds_defn name=data < $mor`
            if ( "${m}." != "." && "${m}." != "stdin:." && "${m}." != "dict:.") then
               if ( -f "$m" ) then
                  set errors = 1
                  echo "   *** ERROR: Need to dictionary, $mor, first ***"
               endif
            endif
         end
      endif
   end  

   set files = ''
   foreach file ($dict $data $mores)
      if ( ! -e $file ) then
         set files = "$files $file"
         echo "   *** WARNING: The file, $file, does not exist ***"
      else if ( ! -f $file ) then
         echo "   *** ERROR: The file, $file, is not a regular file ***"
         set errors = 1
      else if ( ! -w $file ) then
         echo "   *** ERROR: You do now have write permission for file: $file ***"
         set errors = 1
      else if ( $owner == 1 && ! -o "$file" ) then
         echo "   *** ERROR: You do not own the file: $file ***"
         set errors = 1  
      else
         set files = "$files $file"
      endif
   end    

   if ($errors == 0) then
      foreach file ($files)
         if ( $test == 1 ) then
            echo "TEST: Would remove file: $file"
         else
            echo "Removing file: $file"
            rm -f $file
            if ($status != 0) then
               set errors = 1
               echo "   *** ERROR: Unsuccessfully removed: $file ***"
            endif
         endif
      end
   endif
end

echo
if ( $test == 1) then
   echo "- Test Complete -"

else if ( $errors == 0 ) then
   echo "- All removals successful -"
else
   echo "- Unable to remove all files -"
endif

exit $errors

